//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>

#include "save.h"

int main()
{
	std::cout << "Hello, World!" << std::endl;
	
	save("main.cpp");
}

=====================================================
저장시간:36609002103200ns
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>

#include "save.h"

int main()
{
	std::cout << "Hello, World!" << std::endl;
	
	save("main.cpp");
}

=====================================================
저장시간:2025-09-04 18:31:52.8781868
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>

#include "save.h"

int main()
{
	std::cout << "Hello, World!" << std::endl;
	
	save("main.cpp");
}

=====================================================
저장시간:2025-09-08 12:15:00.0515319
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] 구구단을 출력한다. 
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자 
//
// 몇 단을 찍을까요? 7
// 7단 입니다
// 7 x 1 = 7
 
 

int main()
{	
	int num{};
	std::cout << "몇 단을 찍을까요? ";
	std::cin >> num;

	std::cout << num << "단 입니다. " << std::endl;
	for (size_t i = 0; i < 10; i++)
	{
		std::println("{:} x {:} = {:2}", num, i, num * i);
	}

	save("main.cpp");

}

=====================================================
저장시간:2025-09-08 12:55:17.5245522
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] 구구단 전체를 출력하라 
//

 
 

int main()
{	
	for (size_t i = 1; i <= 5; i+=4)
	{
		for (size_t j = 1; j < 10; j++)
		{
			std::print("{:} x {:} = {:2}   ", i, j, i * j);
			std::print("{:} x {:} = {:2}   ", i+1, j, (i+1) * j);
			std::print("{:} x {:} = {:2}   ", i+2, j, (i+2) * j);
			std::print("{:} x {:} = {:2}\n", i+3, j, (i+3) * j);
		}
		
	}

	save("main.cpp");

}

=====================================================
저장시간:2025-09-08 12:55:36.5447638
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] 구구단 전체를 출력하라 
//

 
 

int main()
{	
	for (size_t i = 1; i <= 5; i+=4)
	{
		for (size_t j = 1; j < 10; j++)
		{
			std::print("{:} x {:} = {:2}   ", i, j, i * j);
			std::print("{:} x {:} = {:2}   ", i+1, j, (i+1) * j);
			std::print("{:} x {:} = {:2}   ", i+2, j, (i+2) * j);
			std::print("{:} x {:} = {:2}\n", i+3, j, (i+3) * j);
		}
		std::cout << std::endl;
	}

	save("main.cpp");

}

=====================================================
저장시간:2025-09-08 13:05:11.1714267
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n{ 0b01111111'11111111'11111111'1111111 };

	std::cout << "n에 저장된 값은 " << n << std::endl;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-08 13:05:20.4079783
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n{ 0b011111111'11111111'11111111'1111111 };

	std::cout << "n에 저장된 값은 " << n << std::endl;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-08 13:09:45.8301863
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	//int n{ 0b01111111'11111111'11111111'11111111 };
	int n{ 0x0F'FF'FF'FF };

	std::cout << "n에 저장된 값은 " << n << std::endl;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-08 13:09:57.7794134
=====================================================

//------------------------------------------------------------------------------------------------------------
//	
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	//int n{ 0b01111111'11111111'11111111'11111111 };
	int n{ 0x7F'FF'FF'FF };

	std::cout << "n에 저장된 값은 " << n << std::endl;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-11 17:27:37.3139911
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n = std::numeric_limits<int>::max();

	std::cout << "n에 저장된 값은 " << n << std::endl;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-11 17:32:38.9757436
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n = std::numeric_limits<int>::max();

	std::cout << "n에 저장된 값은 " << n << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<sizeof(int)>(n) << std::endl;;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-11 17:36:49.7435407
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n = std::numeric_limits<int>::max();

	std::cout << "n에 저장된 값은 " << n << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<sizeof(double)>(n) << std::endl;;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-11 17:37:03.5697812
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n = std::numeric_limits<int>::max();

	std::cout << "n에 저장된 값은 " << n << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<32>(n) << std::endl;;

	save("main.cpp");

}

=====================================================
저장시간:2025-09-11 17:43:09.0579203
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	int n = 0xFF'FF'FF'FF;

	std::cout << "n에 저장된 값은 " << n << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<32>(n) << std::endl;;	// 첫 자리 signbit 음수인지 양수인지 나타냄

	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 17:44:17.7585482
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	float f = 10;

	std::cout << "n에 저장된 값은 " << f << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<32>(f) << std::endl;;	// 첫 자리 signbit 음수인지 양수인지 나타냄

	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 17:45:12.7863542
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	float f = 10.1234;

	std::cout << "n에 저장된 값은 " << f << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<32>(f) << std::endl;;	// 첫 자리 signbit 음수인지 양수인지 나타냄

	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 17:45:48.4936983
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <bitset>

#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라. 
// int가 저장할 수 있는 최댓값을 출력하라.

int main()
{	
	float f = 10.1234;

	std::cout << "n에 저장된 값은 " << f << std::endl;
	// n에 저장된 값을 이진수로 출력한다. 
	std::cout << std::bitset<64>(f) << std::endl;;	// 첫 자리 signbit 음수인지 양수인지 나타냄

	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 18:24:04.7508324
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>

#include "save.h"

int main()
{	
	int n = 1234;

	// 언제나 메모리를 차지하고 있는 객체의 다음 질문으로 확인할 수 있다.
	std::cout << sizeof (n) << std::endl;	// 1. 크기는?
	std::cout << std::addressof(n) << std::endl;// 2. 주소는?
	std::cout << typeid(n).name() << std::endl;// 3. 자료형은?


	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 18:28:34.6014212
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>

#include "save.h"

int main()
{	

	// [실습] 다른 자료형으로 바꿔 내용을 확인하자
	long long n = 1234;

	// 언제나 메모리를 차지하고 있는 객체의 다음 질문으로 확인할 수 있다.
	std::cout << sizeof n << std::endl;	// 1. 크기는?
	std::cout << std::addressof(n) << std::endl;// 2. 주소는?
	std::cout << typeid(n).name() << std::endl;// 3. 자료형은?


	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 18:31:52.2357241
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>

#include "save.h"

struct ABC {
	long long a;
	long long b;
	long long c;
};

int main()
{	

	// [실습] 다른 자료형으로 바꿔 내용을 확인하자
	ABC n;

	// 언제나 메모리를 차지하고 있는 객체의 다음 질문으로 확인할 수 있다.
	std::cout << sizeof n << std::endl;	// 1. 크기는?
	std::cout << std::addressof(n) << std::endl;// 2. 주소는?
	std::cout << typeid(n).name() << std::endl;// 3. 자료형은?


	save("main.cpp");
}

=====================================================
저장시간:2025-09-11 18:32:31.9043057
=====================================================

//------------------------------------------------------------------------------------------------------------
//	자료형과 변수 
//------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>

#include "save.h"

struct ABC {
	long long a;
	long long b;
	long long c;
};

int main()
{	

	// [실습] 다른 자료형으로 바꿔 내용을 확인하자
	std::string n;

	// 언제나 메모리를 차지하고 있는 객체의 다음 질문으로 확인할 수 있다.
	std::cout << sizeof n << std::endl;	// 1. 크기는?
	std::cout << std::addressof(n) << std::endl;// 2. 주소는?
	std::cout << typeid(n).name() << std::endl;// 3. 자료형은?


	save("main.cpp");
}