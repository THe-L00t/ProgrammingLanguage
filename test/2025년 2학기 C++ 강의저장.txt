//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// 강의 소개, 출석은 부르지 않음
// 한 학기 강의를 저장하고 싶다
//-----------------------------------------------------------------------------
// 컴파일 환경 - 비주얼 스튜디오 버전 17.14.13 (August 2025) 
// Release 모드 / x64 
// 프로젝트 메뉴 - 일반 - C++ 언어표준 - 미리 보기 
//			- 최신 C++ 초안의 기능(/std:c++latest)
// 프로젝트 메뉴 - C/C++ - SDL 검사 - 아니요
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("메인.cpp");
}//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// 강의 소개, 출석은 부르지 않음
// 한 학기 강의를 저장하고 싶다
//-----------------------------------------------------------------------------
// 컴파일 환경 - 비주얼 스튜디오 버전 17.14.13 (August 2025) 
// Release 모드 / x64 
// 프로젝트 메뉴 - 일반 - C++ 언어표준 - 미리 보기 
//			- 최신 C++ 초안의 기능(/std:c++latest)
// 프로젝트 메뉴 - C/C++ - SDL 검사 - 아니요
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("메인.cpp");
}//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// 강의 소개, 출석은 부르지 않음
// 한 학기 강의를 저장하고 싶다
//-----------------------------------------------------------------------------
// 컴파일 환경 - 비주얼 스튜디오 버전 17.14.13 (August 2025) 
// Release 모드 / x64 
// 프로젝트 메뉴 - 일반 - C++ 언어표준 - 미리 보기 
//			- 최신 C++ 초안의 기능(/std:c++latest)
// 프로젝트 메뉴 - C/C++ - SDL 검사 - 아니요
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 09:33:43.7018027
--------------------------------------------

//-----------------------------------------------------------------------------
// 한 학기 강의를 저장하는 코드
//-----------------------------------------------------------------------------
#pragma once
#include <string_view>

// 헤더 파일에는 선언을 코딩한다. - module로 작성
void save(std::string_view);	// 함수 선언(declaration)
								// 함수의 원형(ptototype)



--------------------------------------------
저장시간 - 2025-09-04 09:33:43.7031280
--------------------------------------------

//-----------------------------------------------------------------------------
// 한 학기 강의를 저장하는 코드
// 덧붙이기로 저장, 저장한 시간도 기록한다.
// 
// 2025. 9. 4일 작성 - 밖이 소란하지만 지지말고 코딩한다.
//-----------------------------------------------------------------------------
#include <iostream>
#include <string_view>
#include <fstream>
#include <chrono>
#include "save.h"

// coding convention을 찾아보세요

void save( std::string_view fileName ) 
{
	std::cout << fileName << "를 저장합니다" << '\n';

	// 이 소스 코드를 파일에 저장하고 싶다.
	std::ifstream in{ fileName.data()};
	in >> std::noskipws;

	// 파일에서 읽은 글자를 화면에 쓰지말고 직접 파일에 기록한다.
	// 파일에 기록하려면 파일을 열어야 한다.

	// 저장할 파일을 만드는데 이렇게 하면 매번 새 파일을 만든다.
	// 다음과 같이 덧붙여 쓰기 모드로 열면 되겠ㄷ.
	std::ofstream out{ "2025년 2학기 C++ 강의저장.txt", std::ios::app };

	// 저장한 시간을 파일에 기록한다.
	out << '\n' << '\n';
	out << "--------------------------------------------" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() << '\n';
	out << "--------------------------------------------" << '\n';
	out << '\n';

	char c;
	while (in >> c)
		out << c;
}

--------------------------------------------
저장시간 - 2025-09-04 09:33:43.7036906
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// 강의 소개, 출석은 부르지 않음
// 한 학기 강의를 저장하고 싶다
//-----------------------------------------------------------------------------
// 컴파일 환경 - 비주얼 스튜디오 버전 17.14.13 (August 2025) 
// Release 모드 / x64 
// 프로젝트 메뉴 - 일반 - C++ 언어표준 - 미리 보기 
//			- 최신 C++ 초안의 기능(/std:c++latest)
// 프로젝트 메뉴 - C/C++ - SDL 검사 - 아니요
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("save.h");
	save("save.cpp");
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:37:39.6334032
--------------------------------------------

//-----------------------------------------------------------------------------
// 한 학기 강의를 저장하는 코드
//-----------------------------------------------------------------------------
#pragma once
#include <string_view>

// 헤더 파일에는 선언을 코딩한다. - module로 작성
void save(std::string_view);	// 함수 선언(declaration)
								// 함수의 원형(ptototype)



--------------------------------------------
저장시간 - 2025-09-04 18:37:39.6343104
--------------------------------------------

//-----------------------------------------------------------------------------
// 한 학기 강의를 저장하는 코드
// 덧붙이기로 저장, 저장한 시간도 기록한다.
// 
// 2025. 9. 4일 작성 - 밖이 소란하지만 지지말고 코딩한다.
//-----------------------------------------------------------------------------
#include <iostream>
#include <string_view>
#include <fstream>
#include <chrono>
#include "save.h"

// coding convention을 찾아보세요

void save( std::string_view fileName ) 
{
	std::cout << fileName << "를 저장합니다" << '\n';

	// 이 소스 코드를 파일에 저장하고 싶다.
	std::ifstream in{ fileName.data()};
	in >> std::noskipws;

	// 파일에서 읽은 글자를 화면에 쓰지말고 직접 파일에 기록한다.
	// 파일에 기록하려면 파일을 열어야 한다.

	// 저장할 파일을 만드는데 이렇게 하면 매번 새 파일을 만든다.
	// 다음과 같이 덧붙여 쓰기 모드로 열면 되겠ㄷ.
	std::ofstream out{ "2025년 2학기 C++ 강의저장.txt", std::ios::app };

	// 저장한 시간을 파일에 기록한다.
	using namespace std::chrono_literals;
	out << '\n' << '\n';
	out << "--------------------------------------------" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() + 9h << '\n';
	out << "--------------------------------------------" << '\n';
	out << '\n';

	char c;
	while (in >> c)
		out << c;
}

--------------------------------------------
저장시간 - 2025-09-04 18:37:39.6348455
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// 강의 소개, 출석은 부르지 않음
// 한 학기 강의를 저장하고 싶다
//-----------------------------------------------------------------------------
// 컴파일 환경 - 비주얼 스튜디오 버전 17.14.13 (August 2025) 
// Release 모드 / x64 
// 프로젝트 메뉴 - 일반 - C++ 언어표준 - 미리 보기 
//			- 최신 C++ 초안의 기능(/std:c++latest)
// 프로젝트 메뉴 - C/C++ - SDL 검사 - 아니요
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("save.h");
	save("save.cpp");
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:42:13.2554178
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 화면에 글자를 출력해 본다

//--------
int main()
//--------
{
	std::cout << "안녕?" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:47:16.3731626
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 화면에 글자를 출력해 본다

//--------
int main()
//--------
{
	// C++ 언어는 프로그램이 실행되면 입출력하기 위한 객체를 자동으로 만든다.
	// cin		- 키보드
	// cout		- 모니터
	// cerr		- 모니터
	// clog		- 모니터

	std::cerr << "안녕?" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:47:29.0202052
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 화면에 글자를 출력해 본다

//--------
int main()
//--------
{
	// C++ 언어는 프로그램이 실행되면 입출력하기 위한 객체를 자동으로 만든다.
	// cin		- 키보드
	// cout		- 모니터
	// cerr		- 모니터
	// clog		- 모니터

	std::clog << "안녕?" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:55:40.2495554
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

// [문제] 화면에 글자를 10번 출력해 보세요. 

//--------
int main() 
//--------
{
	for ( int i = 0; i < 10; ++i ) {
		std::cout << "안녕?" << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:57:19.5364912
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

// [문제] 화면에 글자를 10번 출력해 보세요. 

//--------
int main() 
//--------
{
	for ( int i = 1; i <= 10; ++i ) {
		std::cout << "안녕?" << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:57:32.2476312
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

// [문제] 화면에 글자를 10번 출력해 보세요. 

//--------
int main() 
//--------
{
	for ( int i = 1; i <= 10; ++i ) {
		std::cout << i << " - 안녕?" << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:57:52.4390396
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

// [문제] 화면에 글자를 10번 출력해 보세요. 

//--------
int main() 
//--------
{
	for ( int i = 0; i < 10; ++i ) {
		std::cout << i << " - 안녕?" << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-04 18:58:27.3801069
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 4 목요일 910				      (1주 2일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

// [문제] 화면에 글자를 10번 출력해 보세요. 

//--------
int main() 
//--------
{
	for ( int i = 0; i < 10; ++i ) {
		std::cout << i << " - 안녕?" << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 11:37:43.9877754
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 이름을 물어보고 반갑다고 인사하자.
// 예) 다음과 같이 실행되게 해 본다
//
// 이름은? 씨뿔뿔
// 씨뿔뿔님 반갑습니다.

//--------
int main() 
//--------
{
	std::cout << "이름이 무엇인가요?";

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:02:44.0655920
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 이름을 물어보고 반갑다고 인사하자.
// 예) 다음과 같이 실행되게 해 본다
//
// 이름은? 씨뿔뿔
// 씨뿔뿔님 반갑습니다.

//--------
int main() 
//--------
{
	std::cout << "이름이 무엇인가요?";
	// char name[40]; // 문자열을 저장하려고 char[]를 사용하지 말자
	std::string name;
	std::cin >> name;

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:08:14.9463809
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 이름을 물어보고 반갑다고 인사하자.
// 예) 다음과 같이 실행되게 해 본다
//
// 이름은? 씨뿔뿔
// 씨뿔뿔님 반갑습니다.

//--------
int main() 
//--------
{
	std::cout << "이름이 무엇인가요?";
	// char name[40]; // 문자열을 저장하려고 char[]를 사용하지 말자
	std::string name;
	std::cin >> name;

	std::cout << name << "님 반갑습니다." << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:09:54.3193440
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 이름을 물어보고 반갑다고 인사하자.
// 예) 다음과 같이 실행되게 해 본다
//
// 이름은? 씨뿔뿔
// 씨뿔뿔님 반갑습니다.

//--------
int main() 
//--------
{
	std::cout << "이름이 무엇인가요?";
	// char name[40]; // 문자열을 저장하려고 char[]를 사용하지 말자
	std::string name;
	std::cin >> name;

	std::cout << name << "님 반갑습니다." << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:21:14.0288954
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:24:18.5536002
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan;
	std::cin >> dan;

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:25:35.8699626
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan;
	std::cin >> dan;
	
	std::cout << dan << "단 입니다" << '\n';


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:26:15.1851555
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	std::cout << dan << "단 입니다" << '\n';


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:26:43.2486042
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	std::cout << dan << "단 입니다" << '\n';


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:29:27.0259908
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	std::cout << dan << " x " << 1 << " = " << dan * 1 << '\n';
		

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:29:37.6094945
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	std::cout << dan << " x " << 1 << " = " << dan * 1 << '\n';
		

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:30:50.1640589
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	std::cout << dan << " x " << 1 << " = " << dan * 1 << '\n';
	std::cout << dan << " x " << 2 << " = " << dan * 2 << '\n';
	std::cout << dan << " x " << 3 << " = " << dan * 3 << '\n';
	std::cout << dan << " x " << 4 << " = " << dan * 4 << '\n';
	std::cout << dan << " x " << 5 << " = " << dan * 5 << '\n';
	std::cout << dan << " x " << 6 << " = " << dan * 6 << '\n';
	std::cout << dan << " x " << 7 << " = " << dan * 7 << '\n';
	std::cout << dan << " x " << 8 << " = " << dan * 8 << '\n';
	std::cout << dan << " x " << 9 << " = " << dan * 9 << '\n';


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:34:53.5896157
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 실행되도록 하자

// 몇 단? 7
// 7단 입니다
// 7 x 1 = 7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	for (int i = 1; i <= 9; ++i) {
		std::cout << dan << " x " << i << " = " << dan * i << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:43:45.8557751
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 그대로 실행되도록 하자

// 몇 단? 7

// 7단 입니다
// 7 x 1 =  7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	for (int i = 1; i <= 9; ++i) {
		// std::cout << dan << " x " << i << " = " << dan * i << '\n';
		std::println( "{} x {} = {}", dan, i, dan*i );

	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:44:41.4780331
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 그대로 실행되도록 하자

// 몇 단? 7

// 7단 입니다
// 7 x 1 =  7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	for (int i = 1; i <= 9; ++i) {
		// std::cout << dan << " x " << i << " = " << dan * i << '\n';
		std::println( "{0} x {1} = {2}", dan, i, dan*i );

	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:45:14.6088504
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 그대로 실행되도록 하자

// 몇 단? 7

// 7단 입니다
// 7 x 1 =  7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	for (int i = 1; i <= 9; ++i) {
		// std::cout << dan << " x " << i << " = " << dan * i << '\n';
		std::println( "{1} x {0} = {2}", dan, i, dan*i );

	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:46:11.5377352
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 그대로 실행되도록 하자

// 몇 단? 7

// 7단 입니다
// 7 x 1 =  7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	for (int i = 1; i <= 9; ++i) {
		// std::cout << dan << " x " << i << " = " << dan * i << '\n';
		std::println( "{1} x {0} = {2:2d}", dan, i, dan*i );

	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:47:21.3967033
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>
#include "save.h"

// [문제] 구구단을 출력한다.
// 몇 단을 찍고 싶은지 물어봐서 다음과 같이 그대로 실행되도록 하자

// 몇 단? 7

// 7단 입니다
// 7 x 1 =  7
// 7 x 2 = 14
// 
// 7 x 9 = 63

//--------
int main() 
//--------
{
	std::cout << "몇 단? ";

	int dan = 333;
	std::cin >> dan;
	
	// 여기서 dan이 제대로인가 검사할 필요가 있다.
	std::cout << dan << "단 입니다" << '\n';

	for (int i = 1; i <= 9; ++i) {
		// std::cout << dan << " x " << i << " = " << dan * i << '\n';
		std::println( "{} x {} = {:2d}", dan, i, dan*i );

	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:52:43.9068339
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// C++ I/O 
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <print>
#include "save.h"

// [문제] 구구단 전체를 출력하라.

//--------
int main() 
//--------
{

	for ( int dan = 2; dan <= 9; ++dan ) {
		for (int i = 1; i <= 9; ++i) {
			std::println("{} x {} = {:2d}", dan, i, dan * i);
		}
		std::cout << '\n';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 12:57:49.0375763
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n = 1234;

	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 13:05:10.5156554
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = 0B01111111'11111111'11111111'11111111;

	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-08 13:06:51.4612075
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 8 월 34					      (2주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = 0B01111111'11111111'11111111'11111111;

	n = n + 1;

	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:27:29.6149775
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = std::numeric_limits<int>::max();

	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:28:18.4141340
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = std::numeric_limits<int>::max();

	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:28:40.9834677
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = std::numeric_limits<int>::max();

	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:40:23.1090083
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <bitset>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = std::numeric_limits<int>::max();
	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	// n에 저장된 값을 이수로 출력한다.
	std::cout << "n의 값을 이진수로 - " << std::bitset<32>(n) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:41:19.4369399
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <bitset>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = std::numeric_limits<int>::max();
	n++;
	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	// n에 저장된 값을 이수로 출력한다.
	std::cout << "n의 값을 이진수로 - " << std::bitset<32>(n) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:42:30.2164252
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <bitset>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	int n = 0xFF'FF'FF'FF;
	std::cout << "현재 n에 저장된 값은 - " << n << '\n';

	// n에 저장된 값을 이수로 출력한다.
	std::cout << "n의 값을 이진수로 - " << std::bitset<32>(n) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:44:26.7731055
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <bitset>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	float f = 10;
	std::cout << "현재 f에 저장된 값은 - " << f << '\n';

	// n에 저장된 값을 이수로 출력한다.
	std::cout << "f의 값을 이진수로 - " << std::bitset<32>(f) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 17:44:56.8493594
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <bitset>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 설정하고 화면에 출력하라.

//--------
int main() 
//--------
{
	float f = 10.1234;
	std::cout << "현재 f에 저장된 값은 - " << f << '\n';

	// n에 저장된 값을 이수로 출력한다.
	std::cout << "f의 값을 이진수로 - " << std::bitset<32>(f) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:05:40.7046837
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int  n = 1234;

	std::cout << n << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:17:48.4318792
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"


// 폰 노이만 구조

//--------
int main() 
//--------
{
	int n = 1234;				// 1

	new int{ 1234 };			// 3

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:25:48.6022768
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n = 1234;				

	// 언제나 메모리를 차지하고 있는 객체의 정체를 다음 질문으로 확인할 수 있다.
	std::cout << sizeof n << '\n';				// 1 - 크기는?			
	std::cout << std::addressof(n) << '\n';		// 2 - 주소는?
	std::cout << typeid(n).name() << '\n';		// 3 - 자료형은?


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:28:36.1330178
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [실습] 다른 자료형으로 바꿔 내용을 확인하자

	int* n;				

	std::cout << sizeof n << '\n';				
	std::cout << std::addressof(n) << '\n';		
	std::cout << typeid(n).name() << '\n';		


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:28:59.6470668
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [실습] 다른 자료형으로 바꿔 내용을 확인하자. 35분까지

	nullptr_t n;				

	std::cout << sizeof n << '\n';				
	std::cout << std::addressof(n) << '\n';		
	std::cout << typeid(n).name() << '\n';		


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:35:52.8874238
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [실습] 다른 자료형으로 바꿔 내용을 확인하자. 35분까지

	int	n[10];				

	std::cout << sizeof n << '\n';				
	std::cout << std::addressof(n) << '\n';		
	std::cout << typeid(n).name() << '\n';		


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:37:10.8041306
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [실습] 다른 자료형으로 바꿔 내용을 확인하자. 35분까지

	const const const long long const const const n = 0111;

	std::cout << sizeof n << '\n';				
	std::cout << std::addressof(n) << '\n';		
	std::cout << typeid(n).name() << '\n';		


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:38:06.6515665
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [실습] 다른 자료형으로 바꿔 내용을 확인하자. 35분까지
	class Player {};

	Player n;

	std::cout << sizeof n << '\n';				
	std::cout << std::addressof(n) << '\n';		
	std::cout << typeid(n).name() << '\n';		


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:38:45.3523892
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [실습] 다른 자료형으로 바꿔 내용을 확인하자. 35분까지
	class Player {
		char x[12345];
	
	};

	Player n;

	std::cout << sizeof n << '\n';				
	std::cout << std::addressof(n) << '\n';		
	std::cout << typeid(n).name() << '\n';		


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:43:19.1737789
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n;
	float f;

	std::cout << "지역변수 n - " << std::addressof(n) << '\n';
	std::cout << "지역변수 f - " << std::addressof(f) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:45:54.6558510
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int n;				// global 

//--------
int main() 
//--------
{
	int n;
	float f;

	std::cout << "지역변수 n - " << std::addressof(n) << '\n';
	std::cout << "지역변수 f - " << std::addressof(f) << '\n';
	std::cout << '\n';

	std::cout << "전역변수 n - " << std::addressof(::n) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-11 18:48:18.6847864
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 11 목					      (2주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int gn;				// global 
float gf;

//--------
int main() 
//--------
{
	int n;
	float f;

	std::cout << "지역변수 n - " << std::addressof(n) << '\n';
	std::cout << "지역변수 f - " << std::addressof(f) << '\n';
	std::cout << '\n';

	std::cout << "전역변수 gn - " << std::addressof(gn) << '\n';
	std::cout << "전역변수 gf - " << std::addressof(gf) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 11:35:07.0453660
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 함수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int 값 2개를 입력받아라.

// 합계를 화면에 출력하라.
// main이 문제없이 의도대로 실행되도록 하자.

//--------
int main() 
//--------
{
	std::cout << "int 2개를 입력받아 합계를 출력하는 프로그램" << '\n';
	std::cout << "값 2개를 입력하세요 - ";
	int a, b;
	std::cin >> a >> b;
	
	std::cout << a << " + " << b << " = " << a+b << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 11:35:28.9830287
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 함수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int 값 2개를 입력받아라.

// 합계를 화면에 출력하라.
// main이 문제없이 의도대로 실행되도록 하자.

//--------
int main() 
//--------
{
	std::cout << "int 2개를 입력받아 합계를 출력하는 프로그램" << '\n';
	std::cout << "값 2개를 입력하세요 - ";
	int a, b;
	std::cin >> a >> b;
	
	std::cout << a << " + " << b << " = " << a+b << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 11:35:42.7580538
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 함수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int 값 2개를 입력받아라.

// 합계를 화면에 출력하라.
// main이 문제없이 의도대로 실행되도록 하자.

//--------
int main() 
//--------
{
	std::cout << "int 2개를 입력받아 합계를 출력하는 프로그램" << '\n';
	std::cout << "값 2개를 입력하세요 - ";
	int a, b;
	std::cin >> a >> b;
	
	std::cout << a << " + " << b << " = " << a+b << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:07:46.3575371
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 함수 - 교과서 Function을 본다
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] int 값 2개를 입력받아라.
// 입력받은 int값 2개를 인자로 받아 합계를 리턴하는 함수 add를 작성하라.
// 합계를 화면에 출력하라.
// main이 문제없이 의도대로 실행되도록 하자.

int add(int, int);				// function declaration, prototype, signature
								// 메모리와 전혀 관련이 없다

int add( int x, int y )			// function definition - 메모리를 차지한다(CODE)
{
	return x + y;
}

//--------
int main() 
//--------
{
	std::cout << "int 2개를 입력받아 합계를 출력하는 프로그램" << '\n';
	std::cout << "값 2개를 입력하세요 - ";
	int a, b;
	std::cin >> a >> b;
	
	std::cout << a << " + " << b << " = " << add(a, b) << '\n';

	std::cout << "함수 add의 주소 - " << std::addressof(add) << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:18:15.0311967
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40];			// n[0], n[1], ..., n[39]

	// n에는 40개의 int가 있다.
	// 값을 출력하라.
	for ( int i = 0; i < 40; ++i ) {
		std::cout << n[i] << '\n';
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:37:12.5318120
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40];			// n[0], n[1], ..., n[39]

	// n에는 40개의 int가 있다.
	// 값을 출력하라.
	for ( int i = 0; i < 40; ++i ) {
		std::cout << n[i] << '\n';
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:38:23.7608657
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40] {};

	// n에는 40개의 int가 있다.
	// 값을 출력하라.
	for ( int i = 0; i < 40; ++i ) {
		std::cout << n[i] << '\n';
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:43:13.9384913
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40] {};			// int의 default 값으로 initialization

	// 초기화란 무엇인가? 
	// 객체가 생성될 때 특정한 값으로 설정하는 동작
	// 구분해서 알아야 할 것

	int a { 3};		// a가 만들어질 때 3으로 설정 -> 초기화
	a = 333;		// assignment - 할당, 대입, 배정
	a = 777;
	// 그 외의 모든 write-access 동작은 assignment라고 한다
	// 초기화는 단 한 번만 가능하다.




	// n에는 40개의 int가 있다.
	// 값을 출력하라.
	for ( int i = 0; i < 40; ++i ) {
		std::cout << n[i] << '\n';
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:44:04.8817770
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40] { 3 };			// int의 default 값으로 initialization

	for ( int i = 0; i < 40; ++i ) {
		std::cout << n[i] << "  ";
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:45:17.3126416
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40] { 1, 2, 3 };	// {}을 initializer-list라고 부른다		

	for ( int i = 0; i < 40; ++i ) {
		std::cout << n[i] << "  ";
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:45:45.2880784
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40] { 1, 2, 3 };	// {}을 initializer-list라고 부른다		

	for ( int i = 0; i < 50; ++i ) {
		std::cout << n[i] << "  ";
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:48:02.0592012
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	int n[40] { 1, 2, 3 };			// {}을 initializer-list라고 부른다		
			
	for ( int val : n ) {			// range-based for, range for 루프
		std::cout << val << "  ";
	}


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 12:54:11.7307612
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	int n[1000];

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 13:02:39.0365547
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	int n[1000];

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);

	// 가장 큰 값을 찾아 화면에 출력하라. (10분)

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 13:03:17.9909493
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	int n[1000];

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);

	// 가장 큰 값을 찾아 화면에 출력하라. (10분)

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-15 13:09:33.7154012
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 15 월					      (3주 1일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	int n[1000];

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);

	// 가장 큰 값을 찾아 화면에 출력하라. (10분)
	int maxVal = std::numeric_limits<int>::min();
	for (int val : n) {			// complexity가 O(N)인 알고리즘
		if (maxVal < val)
			maxVal = val;
	}
	std::cout << "최댓값은 - " << maxVal << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:06:51.3045303
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include <array>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	// int n[1000];			// 이런식의 자료형은 앞으로 C++언어에서 사용하지 않아야겠다.
							// array<int,1000> n;
							// 이 새 자료구조는 속도/공간면에서 불리함이 하나도 없다.

	std::array<int, 1000> n;

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);

	// 가장 큰 값을 찾아 화면에 출력하라. (10분)
	int maxVal = std::numeric_limits<int>::min();
	for (int val : n) {			// complexity가 O(N)인 알고리즘
		if (maxVal < val)
			maxVal = val;
	}
	std::cout << "최댓값은 - " << maxVal << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:09:14.5701179
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include <array>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre{ std::random_device()()};		// dre의 시작값이 모두 같아 같은 결과가 나옴
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	// int n[1000];			// 이런식의 자료형은 앞으로 C++언어에서 사용하지 않아야겠다.
							// array<int,1000> n;
							// 이 새 자료구조는 속도/공간면에서 불리함이 하나도 없다.

	std::array<int, 1000> n;

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);

	// 가장 큰 값을 찾아 화면에 출력하라. (10분)
	int maxVal = std::numeric_limits<int>::min();
	for (int val : n) {			// complexity가 O(N)인 알고리즘
		if (maxVal < val)
			maxVal = val;
	}
	std::cout << "최댓값은 - " << maxVal << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:09:26.5036598
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include <array>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.
// 제일 큰 값을 찾아 화면에 출력한다.(실습)

std::default_random_engine  dre{ std::random_device()()};		// dre의 시작값이 모두 같아 같은 결과가 나옴
std::uniform_int_distribution uid{ 0, 9999'9999 };

//--------
int main() 
//--------
{
	// int n[1000];			// 이런식의 자료형은 앞으로 C++언어에서 사용하지 않아야겠다.
							// array<int,1000> n;
							// 이 새 자료구조는 속도/공간면에서 불리함이 하나도 없다.

	std::array<int, 1000> n;

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:10}", val);

	// 가장 큰 값을 찾아 화면에 출력하라. (10분)
	int maxVal = std::numeric_limits<int>::min();
	for (int val : n) {			// complexity가 O(N)인 알고리즘
		if (maxVal < val)
			maxVal = val;
	}
	std::cout << "최댓값은 - " << maxVal << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:11:59.6412239
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 999 };

//--------
int main() 
//--------
{
	int n[1000];	

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1'000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:8}", val);

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:26:07.9941488
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 999 };

//--------
int main() 
//--------
{
	int n[30];	

	// 1000개의 값을 할당한다
	for (int i = 0; i < 30; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:8}", val);

	// [문제] 사용자가 찾길 원하는 int 값을 물어보자.
	// 그 값이 n에 있으면 있다, 없으면 없다고 출력하라.
	// 이 과정을 반복하라.


	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:32:41.6150418
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 999 };

//--------
int main() 
//--------
{
	int n[30];	

	// 1000개의 값을 할당한다
	for (int i = 0; i < 30; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:8}", val);

	// [문제] 사용자가 찾길 원하는 int 값을 물어보자.
	// 그 값이 n에 있으면 있다, 없으면 없다고 출력하라.
	// 이 과정을 반복하라.

	std::cout << "찾을 수? - ";
	int num;
	std::cin >> num;

	bool flag { false };
	for (int val : n) {
		if (val == num) {
			flag = true;
			break;
		}
	}

	// 찾았으면 이리로 탈출해야.
	// 못 찾아도 이리로 나온다.

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:35:15.1786059
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 999 };

//--------
int main() 
//--------
{
	int n[1000];	

	// 1000개의 값을 할당한다
	for (int i = 0; i < 1000; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:8}", val);

	// [문제] 사용자가 찾길 원하는 int 값을 물어보자.
	// 그 값이 n에 있으면 있다, 없으면 없다고 출력하라.
	// 이 과정을 반복하라.
	save("메인.cpp");

	while ( true ) {
		std::cout << "찾을 수? - ";
		int num;
		std::cin >> num;

		bool flag{ false };
		for (int val : n) {
			if (val == num) {
				flag = true;
				break;
			}
		}

		if (flag) {
			std::cout << num << " - 찾았습니다" << '\n';
		}
		else {
			std::cout << "그런 값은 없다" << '\n';
		}
	}
}

--------------------------------------------
저장시간 - 2025-09-18 18:35:51.2602881
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] int 1000개를 저장할 메모리를 확보한다.
// 각 int값을 랜덤값으로(임의로 - 제멋대로) 채운다.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 0, 999 };

//--------
int main() 
//--------
{
	int n[100];	

	// 1000개의 값을 할당한다
	for (int i = 0; i < 100; ++i)
		n[i] = uid(dre);

	std::cout << "출력시작" << '\n';

	// 값을 출력해 본다
	for (int val : n)
		std::print("{:8}", val);

	// [문제] 사용자가 찾길 원하는 int 값을 물어보자.
	// 그 값이 n에 있으면 있다, 없으면 없다고 출력하라.
	// 이 과정을 반복하라.
	save("메인.cpp");

	while ( true ) {
		std::cout << "찾을 수? - ";
		int num;
		std::cin >> num;

		bool flag{ false };
		for (int val : n) {
			if (val == num) {
				flag = true;
				break;
			}
		}

		if (flag) {
			std::cout << num << " - 찾았습니다" << '\n';
		}
		else {
			std::cout << "그런 값은 없다" << '\n';
		}
	}
}

--------------------------------------------
저장시간 - 2025-09-18 18:55:02.5228262
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 개수 - " << num1 << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:55:12.4877760
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 1000'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 개수 - " << num1 << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:55:32.1529404
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 10'0000'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 개수 - " << num1 << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:56:25.0734304
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 확률(%) - " << num1 / 100'0000 << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:57:16.0750452
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 확률(%) - " << static_cast<float>(num1) / 100'0000 << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:57:36.0820968
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 확률(%) - " << static_cast<float>(num1) / 100'0000 * 100 << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:58:27.4362416
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::cout << "1의 확률(%) - " <<  100.f * num1 / 100'0000 << '\n';		// promotion

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 18:59:51.6168075
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( uid(dre) == 1 )
			num1++;
	}

	std::println("1의 확률(%) - {:.2f}", 100.f * num1 / 100'0000);

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 19:02:34.4891960
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};
	int num2{};
	int num3{};
	int num4{};
	int num5{};
	int num6{};

	for (int i = 0; i < 100'0000; ++i) {
		if ( 1 == uid(dre) )
			num1++;
		if (uid(dre) == 2)
			num2++;
		if (uid(dre) == 3)
			num3++;
		if (uid(dre) == 4)
			num4++;
		if (uid(dre) == 5)
			num5++;
		if (uid(dre) == 6)
			num6++;
	}

	std::println("1의 확률(%) - {:.2f}", 100.f * num1 / 100'0000);
	std::println("2의 확률(%) - {:.2f}", 100.f * num2 / 100'0000);
	std::println("3의 확률(%) - {:.2f}", 100.f * num3 / 100'0000);
	std::println("4의 확률(%) - {:.2f}", 100.f * num4 / 100'0000);
	std::println("5의 확률(%) - {:.2f}", 100.f * num5 / 100'0000);
	std::println("6의 확률(%) - {:.2f}", 100.f * num6 / 100'0000);

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 19:02:55.0689599
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num1{};
	int num2{};
	int num3{};
	int num4{};
	int num5{};
	int num6{};

	for (int i = 0; i < 1000'0000; ++i) {
		if ( 1 == uid(dre) )
			num1++;
		if (uid(dre) == 2)
			num2++;
		if (uid(dre) == 3)
			num3++;
		if (uid(dre) == 4)
			num4++;
		if (uid(dre) == 5)
			num5++;
		if (uid(dre) == 6)
			num6++;
	}

	std::println("1의 확률(%) - {:.2f}", 100.f * num1 / 100'0000);
	std::println("2의 확률(%) - {:.2f}", 100.f * num2 / 100'0000);
	std::println("3의 확률(%) - {:.2f}", 100.f * num3 / 100'0000);
	std::println("4의 확률(%) - {:.2f}", 100.f * num4 / 100'0000);
	std::println("5의 확률(%) - {:.2f}", 100.f * num5 / 100'0000);
	std::println("6의 확률(%) - {:.2f}", 100.f * num6 / 100'0000);

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 19:05:35.4639835
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num[6];

	for (int i = 0; i < 100'0000; ++i) 
		++num[uid(dre) - 1];

	for ( int i = 0; i < 6; ++i ) 
		std::println("{}의 확률(%) - {:.2f}", i+1, 100.f * num[i] / 100'0000);

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-18 19:05:53.8215892
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 18   목					      (3주 2일)
//-----------------------------------------------------------------------------
// 자료형과 변수
//-----------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <print>
#include "save.h"

// [문제] 주사위 숫자가 정말로 공정하게 같은 확률로 나오는지 알고 싶다.
// 주사위를 100만번 던져서 각 숫자가 나온 확률을 화면에 출력하라.

std::default_random_engine  dre;
std::uniform_int_distribution uid{ 1, 6 };

//--------
int main() 
//--------
{
	int num[6]{};

	for (int i = 0; i < 100'0000; ++i) 
		++num[uid(dre) - 1];

	for ( int i = 0; i < 6; ++i ) 
		std::println("{}의 확률(%) - {:.2f}", i+1, 100.f * num[i] / 100'0000);

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 11:45:42.8458748
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 지역변수란 무엇인가?  -> 전역이 아닌 변수, 어딘가에 속해있는 변수
// 어디에 위치하나?				-> STACK segment
// 얼마만큼 쓸 수 있나?			-> 1MB	

//--------
int main() 
//--------
{
	int n{ 1 };

	{
		int n{ 2 };

		{
			int n{ 3 };
			std::cout << n << '\n';
			// 이 지역을 벗어난 위에 있는 n의 값을 출력하라.
		}
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 11:47:02.7171783
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 지역변수란 무엇인가?  -> 전역이 아닌 변수, 어딘가에 속해있는 변수
// 어디에 위치하나?				-> STACK segment
// 얼마만큼 쓸 수 있나?			-> 1MB	

int n{ 20250922 };

//--------
int main() 
//--------
{
	int n{ 1 };

	{
		int n{ 2 };

		{
			int n{ 3 };
			std::cout << n << '\n';
			// 이 지역을 벗어난 위에 있는 n의 값을 출력하라.
			std::cout << ::n << '\n';
		}
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 11:59:21.7091762
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[100];

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 11:59:30.6007774
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[1000];

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 11:59:58.5809320
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[100'000];			// 400KB

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:00:38.2412064
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[1'000'000];			// 4MB

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:00:55.5984365
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[10'000'000];			// 40MB

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:03:43.9427356
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[10'000'000];			// 40MB

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:04:55.0064413
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[100'000'000];			// 400MB

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:06:59.8018692
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

//--------
int main() 
//--------
{
	// [문제] int형 변수를 몇 개까지 만들 수 있는 지 확인하라.
	// 전체 몇 바이트인지 알아보자.
	int n[500'000'000];			// 2GB

	std::cout << "문제 없다" << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:32:09.0020411
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int cnt{};

int f();

int f()
{
	int n[10'000]{2025, 9, 22};			// 40KB * 25 ==> 1MB
	std::cout << "이 함수를 부른 횟수 - " << ++cnt << ", n의 마지막 값 - " << n[0] << '\n';

	// recursive function call
	f();
	return 20250922;
}


//--------
int main() 
//--------
{
	save("메인.cpp");

	f();
}

--------------------------------------------
저장시간 - 2025-09-22 12:32:49.3900322
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int cnt{};

int f();

int f()
{
	int n[10'000];

	// recursive function call
	f();
	return 20250922;
}


//--------
int main() 
//--------
{
	save("메인.cpp");

	f();
}

--------------------------------------------
저장시간 - 2025-09-22 12:33:13.2787131
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int cnt{};

int f();

int f()
{
	int n[10'000];

	std::cout << ++cnt << '\n';
	// recursive function call
	f();
	return 20250922;
}


//--------
int main() 
//--------
{
	save("메인.cpp");

	f();
}

--------------------------------------------
저장시간 - 2025-09-22 12:33:53.8212165
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int cnt{};

void f();

void f()
{
	int n[10'000];

	std::cout << ++cnt << '\n';
	// recursive function call
	f();
}


//--------
int main() 
//--------
{
	save("메인.cpp");

	f();
}

--------------------------------------------
저장시간 - 2025-09-22 12:36:32.3059810
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[12345678];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:36:58.7585180
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[10'0000'0000];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:37:21.1550523
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[2'000'000'000];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:39:05.4419980
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[2'000'000'000]{ 1 };

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:40:42.2265075
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[1'000'000'000]{ 1 };

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';
	for (int i = 0; i < 10; ++i)
		std::cout << c + 'a' << '\n';
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:41:28.0053111
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[1'000'000'000];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';
	for (int i = 0; i < 10; ++i)
		std::cout << c[i] + 'a' << '\n';
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:41:54.7508762
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[1'900'000'000];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';
	for (int i = 0; i < 10; ++i)
		std::cout << c[i] + 'a' << '\n';
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:42:30.6407605
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[1'990'000'000];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';
	for (int i = 0; i < 10; ++i)
		std::cout << c[i] + 'a' << '\n';
	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:44:21.3017227
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[2'147'480'000];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:44:58.3004458
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[0x7fffffff];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:45:08.4423603
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[0x7fffffff];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:45:29.2705311
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[21'4748'3647];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:48:22.1120938
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[21'4748'3647];		// 배열의 index값은 21'4748'3647
char d[21'4748'3647];		// 배열의 index값은 21'4748'3647

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:48:50.3104733
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[21'4748'3647];		// 배열의 index값은 21'4748'3647
char d[21'4748'3647];		// 배열의 index값은 21'4748'3647
char e[21'4748'3647];		// 배열의 index값은 21'4748'3647
char f[21'4748'3647];		// 배열의 index값은 21'4748'3647

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:49:20.5822466
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[21'4748'3647];		// 배열의 index값은 21'4748'3647
char d[21'4748'3647];		// 배열의 index값은 21'4748'3647
char e[21'4748'3647];		// 배열의 index값은 21'4748'3647
char f[21'4748'3647];		// 배열의 index값은 21'4748'3647
char g[21'4748'3647];		// 배열의 index값은 21'4748'3647
char h[21'4748'3647];		// 배열의 index값은 21'4748'3647
char i[21'4748'3647];		// 배열의 index값은 21'4748'3647
char j[21'4748'3647];		// 배열의 index값은 21'4748'3647

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:49:52.7430249
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[21'4748'3647];		// 배열의 index값은 21'4748'3647
char d[21'4748'3647];		// 배열의 index값은 21'4748'3647
char e[21'4748'3647];		// 배열의 index값은 21'4748'3647
char f[21'4748'3647];		// 배열의 index값은 21'4748'3647
char g[21'4748'3647];		// 배열의 index값은 21'4748'3647
char h[21'4748'3647];		// 배열의 index값은 21'4748'3647
char i[21'4748'3647];		// 배열의 index값은 21'4748'3647
char j[21'4748'3647];		// 배열의 index값은 21'4748'3647
char k[21'4748'3647];		// 배열의 index값은 21'4748'3647
char l[21'4748'3647];		// 배열의 index값은 21'4748'3647
char m[21'4748'3647];		// 배열의 index값은 21'4748'3647
char n[21'4748'3647];		// 배열의 index값은 21'4748'3647

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:53:03.7398492
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[11'4748'3647];		

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	for (int i = 0; i < 100; ++i) {
		std::cout << c[i] << ' ';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:54:35.2358179
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[11'4748'3647];

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	for (int i = 0; i < 100; ++i) {
		std::cout << static_cast<char>(c[i]+'1') << ' ';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:58:03.8630841
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[11'4748'3647] { 1, 2, 3 };

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	for (int i = 0; i < 100; ++i) {
		std::cout << static_cast<char>(c[i]+'1') << ' ';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 12:59:17.0744779
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[11'4748'3647] { };

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	for (int i = 0; i < 100; ++i) {
		std::cout << static_cast<char>(c[i]+'1') << ' ';
	}

	save("메인.cpp");
}

--------------------------------------------
저장시간 - 2025-09-22 13:00:27.5485851
--------------------------------------------

//-----------------------------------------------------------------------------
// 2025. 2학기 C++	월34목910		9. 22   월					      (4주 1일)
//-----------------------------------------------------------------------------
// 변수와 메모리
// STACK - 메모리 한계를 모르겠다, 지금 코드는 f가 25번 실행되고 종료
//-----------------------------------------------------------------------------
#include <iostream>
#include "save.h"

// [문제] 전역변수의 최대크기를 알아본다.	 ~45분까지
char c[19'4748'3647] { 1 };

//--------
int main() 
//--------
{
	std::cout << "c의 크기 - " << sizeof c << '\n';

	for (int i = 0; i < 100; ++i) {
		std::cout << static_cast<char>(c[i]+'1') << ' ';
	}

	save("메인.cpp");
}